# Build stage - uses Node.js on UBI
FROM registry.access.redhat.com/ubi9/nodejs-18 as build

# --- Metadata ---
LABEL name="dengue-kg-frontend-build" \
      version="1.0" \
      description="Build environment for Dengue Knowledge Graph UI"

# Copy package.json and package-lock.json for better layer caching
# Use the default workdir /opt/app-root/src
COPY package*.json /opt/app-root/src/
WORKDIR /opt/app-root/src

# --- Ensure permissions before npm ci ---
# Switch to root temporarily
USER root
# Grant ownership of the workdir to the default user (1001) and root group (0)
RUN chown -R 1001:0 /opt/app-root/src
# Switch back to the default user
USER 1001
# --- End permission fix ---

# Install dependencies with exact versions
RUN npm ci

# Copy source files
COPY . /opt/app-root/src/

# Build the application
RUN npm run build

# Production stage - uses Nginx on UBI
FROM registry.access.redhat.com/ubi9/nginx-120

# --- Metadata ---
LABEL name="dengue-kg-frontend" \
      version="1.0" \
      summary="Frontend UI for Dengue Knowledge Graph" \
      description="Web interface for exploring the dengue knowledge graph"

# Copy built assets from build stage's default workdir to nginx html directory
COPY --from=build /opt/app-root/src/build /usr/share/nginx/html

# Copy custom nginx configuration
COPY nginx/nginx.conf /etc/nginx/nginx.conf

# Expose port 8080 (default for OpenShift Nginx)
EXPOSE 8080

# Run nginx in foreground
CMD ["nginx", "-g", "daemon off;"]
