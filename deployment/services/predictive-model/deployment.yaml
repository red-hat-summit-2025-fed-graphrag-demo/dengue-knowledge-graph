apiVersion: apps/v1
kind: Deployment
metadata:
  name: dengue-predictive-model
  labels:
    app: dengue-predictive-model
spec:
  replicas: 2
  selector:
    matchLabels:
      app: dengue-predictive-model
  template:
    metadata:
      labels:
        app: dengue-predictive-model
    spec:
      containers:
      - name: predictive-model
        image: image-registry.openshift-image-registry.svc:5000/dengue-kg/dengue-predictive-model:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
          name: http
        env:
        - name: NEO4J_URI
          value: bolt://neo4j-dengue:7687
        - name: NEO4J_USER
          valueFrom:
            secretKeyRef:
              name: neo4j-credentials
              key: username
              optional: false
        - name: NEO4J_PASSWORD
          valueFrom:
            secretKeyRef:
              name: neo4j-credentials
              key: password
              optional: false
        - name: KNOWLEDGE_GRAPH_API
          value: http://dengue-api:8000
        - name: MODEL_PATH
          value: /app/models
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: predictive-model-config
              key: log-level
              optional: true
        resources:
          requests:
            memory: "512Mi"
            cpu: "200m"
          limits:
            memory: "1Gi"
            cpu: "1"
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          timeoutSeconds: 5
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 10
          timeoutSeconds: 5
          periodSeconds: 10
        volumeMounts:
        - name: models-volume
          mountPath: /app/models
      volumes:
      - name: models-volume
        persistentVolumeClaim:
          claimName: predictive-model-data-pvc
